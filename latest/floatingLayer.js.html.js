tui.util.defineNamespace("fedoc.content", {});
fedoc.content["floatingLayer.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Module for managing non zero z-index division on viewport\n * @author NHN Ent. FE Development Team &lt;dl_javascript@nhnent.com>\n */\nimport View from './view';\n\nconst VIEW_PROP = '_floatingLayer';\nconst DEFAULT_ZINDEX = 999;\n\n/**\n * Create layer for floating ui\n * @params {...string} [cssClass] - css classes\n * @returns {HTMLElement} layer\n */\nexport function createLayer(...cssClass) {\n    const layer = document.createElement('div');\n\n    dom.css(layer, {\n        display: 'none',\n        position: 'absolute'\n    });\n\n    if (cssClass.length) {\n        dom.addClass(layer, ...cssClass);\n    }\n\n    return layer;\n}\n\n/**\n * Class for managing floating layers\n * @extends View\n */\nexport default class FloatingLayer extends View {\n    /**\n     * Constructor\n     * @param {HTMLElement} [container] - base container element\n     * @param {object} [options] - options for FloatingLayer\n     *   @param {boolean} [options.modaless=false] - set true for create floating\n     *    layer without dimmed layer\n     * @example\n     * var layer = new tui.component.FloatingLayer(document.querySelector('#fl'));\n     */\n    constructor(container, {modaless = false} = {}) {\n        super(createLayer('floating-layer'));\n\n        /**\n         * @type {object}\n         */\n        this.options = Object.assign({}, {modaless});\n\n        /**\n         * @type {HTMLElement}\n         */\n        this.parent = container;\n\n        /**\n         * @type {number}\n         */\n        this.zIndex = DEFAULT_ZINDEX;\n\n        /**\n         * @type {HTMLElement}\n         */\n        this.dimm = null;\n\n        /**\n         * @type {object}\n         */\n        this.siblings = null;\n\n        this.initialize(container);\n    }\n\n    /**\n     * Initialize floating layer instance\n     * @param {HTMLElement} container - element to base of several floating\n     *  layers not floating layer itself\n     */\n    initialize(container) {\n        let siblings = container[VIEW_PROP];\n\n        if (!siblings) {\n            siblings = container[VIEW_PROP] = new Set();\n        }\n\n        siblings.add(this);\n\n        this.siblings = siblings;\n\n        this.zIndex = this.getLargestZIndex() + 1;\n\n        if (!this.options.modaless) {\n            let dimm = this.dimm = createLayer('floating-layer-dimm');\n\n            dom.css(dimm, 'position', 'fixed');\n            dom.setBound(dimm, {top: 0, right: 0, bottom: 0, left: 0});\n\n            container.appendChild(dimm);\n        }\n\n        container.appendChild(this.container);\n    }\n\n    /**\n     * Destroy floating layer. no layer after destroying then\n     */\n    beforeDestroy() {\n        const siblings = this.siblings;\n        const parent = this.parent;\n\n        siblings.delete(this);\n\n        if (!siblings.size) {\n            delete parent[VIEW_PROP];\n            dom.css(parent, 'position', '');\n        }\n\n        dom.removeElement(this.container);\n        dom.removeElement(this.dimm);\n\n        this.options = this.siblings = this.zIndex = null;\n    }\n\n    /**\n     * Destructor\n     * @override\n     * @api\n     */\n    destroy() {\n        View.prototype.destroy.call(this);\n    }\n\n    /**\n     * Set layer content\n     * @param {string} html - html string\n     */\n    setContent(html) {\n        this.container.innerHTML = html;\n    }\n\n    /**\n     * Get largest z-index value in this container\n     * @returns {number}\n     */\n    getLargestZIndex() {\n        const indexes = [...this.siblings].map(fl => fl.zIndex);\n\n        indexes.push(DEFAULT_ZINDEX);\n\n        return Math.max(...indexes);\n    }\n\n    /**\n     * Set focus to layer\n     * @api\n     */\n    focus() {\n        const largestZIndex = this.getLargestZIndex();\n        const newZIndex = (largestZIndex + 2);\n\n        dom.css(this.container, 'zIndex', newZIndex);\n\n        this.zIndex = newZIndex;\n\n        if (!this.options.modaless) {\n            dom.css(this.dimm, 'zIndex', (this.zIndex - 1));\n        }\n    }\n\n    /**\n     * Show layer\n     * @api\n     */\n    show() {\n        this.focus();\n        dom.css(this.container, 'display', 'block');\n\n        if (!this.options.modaless) {\n            dom.css(this.dimm, 'display', 'block');\n        }\n    }\n\n    /**\n     * Hide layer\n     * @api\n     */\n    hide() {\n        dom.css(this.container, 'display', 'none');\n\n        if (!this.options.modaless) {\n            dom.css(this.dimm, 'display', 'none');\n        }\n    }\n}\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"